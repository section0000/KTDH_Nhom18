/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author admin
 */
public class Project extends javax.swing.JFrame {

    private Graphics g3D;
    private Graphics g2D;
    private int step = 40; // Ti le: 1 don vi = 40 pixel 
    private int height; // Chieu cao cua Panel
    private int width; // Chieu dai cua Panel

    int bkDongHo = 1;
    Point muiXe1, muiXe2, muiXe3, muiXe4, thanXe1, thanXe2, thanXe3, thanXe4, banhXe1, banhXe2;

    public void khoiTaoXe() {
        // Vẽ Mui Xe
        muiXe1 = new Point(-8, 3);
        muiXe2 = new Point(-8, 4);
        muiXe3 = new Point(-6, 4);
        muiXe4 = new Point(-6, 3);
        // Vẽ Thân Xe
        thanXe1 = new Point(-9.5, 2);
        thanXe2 = new Point(-9.5, 3);
        thanXe3 = new Point(-4.5, 3);
        thanXe4 = new Point(-4.5, 2);
        //Bánh Xe
        banhXe1 = new Point();
        banhXe1.setX((thanXe1.getX() + 0.5) * this.step + width / 2);
        banhXe1.setY(height / 2 - (thanXe1.getY() + 0.3) * this.step);
        banhXe2 = new Point();
        banhXe2.setX((thanXe4.getX() - 1) * this.step + width / 2);
        banhXe2.setY(height / 2 - (thanXe4.getY() + 0.3) * this.step);
    }

    public Project() {
        initComponents();
        this.setLocationRelativeTo(null);
        height = panel3D.getBounds().height;
        width = panel3D.getBounds().width;
        khoiTaoXe();
        g3D = panel3D.getGraphics();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        panel3D = new javax.swing.JPanel();
        xoaManHinh_Btn = new javax.swing.JButton();
        tuyChon_LPn = new javax.swing.JLayeredPane();
        tuyChon_Pn = new javax.swing.JPanel();
        HLP_Btn = new javax.swing.JButton();
        HHCN_Btn = new javax.swing.JButton();
        HLP_Btn1 = new javax.swing.JButton();
        HLP_Pn = new javax.swing.JPanel();
        doDaiCanhHLP_Lbl = new javax.swing.JLabel();
        veHLP_Btn = new javax.swing.JButton();
        doDaiCanhHLP_TF = new javax.swing.JTextField();
        quayLai_Btn1 = new javax.swing.JButton();
        diemGocHLP_Lbl = new javax.swing.JLabel();
        xOHLP_TF = new javax.swing.JTextField();
        xOHLP_Lbl = new javax.swing.JLabel();
        yOHLP_Lbl = new javax.swing.JLabel();
        yOHLP_TF = new javax.swing.JTextField();
        zOHLP_Lbl = new javax.swing.JLabel();
        zOHLP_TF = new javax.swing.JTextField();
        HHCN_Pn = new javax.swing.JPanel();
        rong_TF = new javax.swing.JTextField();
        cao_Lbl = new javax.swing.JLabel();
        dai_TF = new javax.swing.JTextField();
        dai_Lbl = new javax.swing.JLabel();
        cao_TF = new javax.swing.JTextField();
        rong_Lbl = new javax.swing.JLabel();
        veHHCN_Btn = new javax.swing.JButton();
        quayLai_Btn = new javax.swing.JButton();
        diemGocHHCN_Lbl = new javax.swing.JLabel();
        xOHHCN_Lbl = new javax.swing.JLabel();
        xOHHCN_TF = new javax.swing.JTextField();
        yOHHCN_Lbl = new javax.swing.JLabel();
        yOHHCN_TF = new javax.swing.JTextField();
        zOHHCN_Lbl = new javax.swing.JLabel();
        zOHHCN_TF = new javax.swing.JTextField();
        HC_Pn = new javax.swing.JPanel();
        tam_Lbl = new javax.swing.JLabel();
        xOHC_TF = new javax.swing.JTextField();
        xOHC_Lbl = new javax.swing.JLabel();
        yOHC_TF = new javax.swing.JTextField();
        yOHC_Lbl = new javax.swing.JLabel();
        zOHC_TF = new javax.swing.JTextField();
        zOHC_Lbl = new javax.swing.JLabel();
        r_Lbl = new javax.swing.JLabel();
        r_TF = new javax.swing.JTextField();
        quayLaiHC_Btn = new javax.swing.JButton();
        veHC_Btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        HHCN_Btn1 = new javax.swing.JButton();
        HHCN_Btn2 = new javax.swing.JButton();
        dongHo = new javax.swing.JButton();
        YDongHo = new javax.swing.JTextField();
        XDongHo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DongHoLon = new javax.swing.JButton();
        Phai = new javax.swing.JButton();
        DongHoBe = new javax.swing.JButton();
        Len = new javax.swing.JButton();
        Trai = new javax.swing.JButton();
        Xuong = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        khoanCachTT = new javax.swing.JTextField();
        panel2D = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        A = new javax.swing.JLabel();
        B = new javax.swing.JLabel();
        C = new javax.swing.JLabel();
        D = new javax.swing.JLabel();
        F = new javax.swing.JLabel();
        E = new javax.swing.JLabel();
        G = new javax.swing.JLabel();
        H = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel3D.setBackground(new java.awt.Color(255, 255, 255));
        panel3D.setPreferredSize(new java.awt.Dimension(900, 300));
        panel3D.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                panel3DAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        javax.swing.GroupLayout panel3DLayout = new javax.swing.GroupLayout(panel3D);
        panel3D.setLayout(panel3DLayout);
        panel3DLayout.setHorizontalGroup(
            panel3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        panel3DLayout.setVerticalGroup(
            panel3DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        xoaManHinh_Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        xoaManHinh_Btn.setText("Xóa màn hình");
        xoaManHinh_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaManHinh_BtnActionPerformed(evt);
            }
        });

        tuyChon_LPn.setLayout(new java.awt.CardLayout());

        HLP_Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HLP_Btn.setText("Hình lập phương");
        HLP_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HLP_BtnActionPerformed(evt);
            }
        });

        HHCN_Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HHCN_Btn.setText("Hình hộp chữ nhật");
        HHCN_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HHCN_BtnActionPerformed(evt);
            }
        });

        HLP_Btn1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HLP_Btn1.setText("Hình cầu");
        HLP_Btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HLP_Btn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tuyChon_PnLayout = new javax.swing.GroupLayout(tuyChon_Pn);
        tuyChon_Pn.setLayout(tuyChon_PnLayout);
        tuyChon_PnLayout.setHorizontalGroup(
            tuyChon_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tuyChon_PnLayout.createSequentialGroup()
                .addGroup(tuyChon_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HHCN_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                    .addComponent(HLP_Btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                    .addComponent(HLP_Btn1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        tuyChon_PnLayout.setVerticalGroup(
            tuyChon_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tuyChon_PnLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(HHCN_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(HLP_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(HLP_Btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        tuyChon_LPn.add(tuyChon_Pn, "card4");

        doDaiCanhHLP_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        doDaiCanhHLP_Lbl.setText("Độ dài cạnh HLP");

        veHLP_Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        veHLP_Btn.setText("Vẽ hình lập phương");
        veHLP_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                veHLP_BtnActionPerformed(evt);
            }
        });

        doDaiCanhHLP_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        quayLai_Btn1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        quayLai_Btn1.setText("Quay lại");
        quayLai_Btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quayLai_Btn1ActionPerformed(evt);
            }
        });

        diemGocHLP_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        diemGocHLP_Lbl.setText("Điểm gốc");

        xOHLP_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xOHLP_TF.setText("0");

        xOHLP_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        xOHLP_Lbl.setText("xO");

        yOHLP_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        yOHLP_Lbl.setText("yO");

        yOHLP_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        yOHLP_TF.setText("0");

        zOHLP_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        zOHLP_Lbl.setText("zO");

        zOHLP_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        zOHLP_TF.setText("0");

        javax.swing.GroupLayout HLP_PnLayout = new javax.swing.GroupLayout(HLP_Pn);
        HLP_Pn.setLayout(HLP_PnLayout);
        HLP_PnLayout.setHorizontalGroup(
            HLP_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HLP_PnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HLP_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(doDaiCanhHLP_TF)
                    .addComponent(veHLP_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(HLP_PnLayout.createSequentialGroup()
                        .addGroup(HLP_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doDaiCanhHLP_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(diemGocHLP_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HLP_PnLayout.createSequentialGroup()
                                .addGroup(HLP_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(xOHLP_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                                    .addComponent(xOHLP_TF, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(HLP_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(yOHLP_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(yOHLP_TF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(HLP_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(zOHLP_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(zOHLP_TF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(quayLai_Btn1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        HLP_PnLayout.setVerticalGroup(
            HLP_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HLP_PnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(diemGocHLP_Lbl)
                .addGap(7, 7, 7)
                .addGroup(HLP_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HLP_PnLayout.createSequentialGroup()
                        .addComponent(xOHLP_Lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xOHLP_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HLP_PnLayout.createSequentialGroup()
                        .addComponent(yOHLP_Lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yOHLP_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HLP_PnLayout.createSequentialGroup()
                        .addComponent(zOHLP_Lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(zOHLP_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doDaiCanhHLP_Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doDaiCanhHLP_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(veHLP_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(quayLai_Btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        tuyChon_LPn.add(HLP_Pn, "card2");

        rong_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        cao_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cao_Lbl.setText("Cao");

        dai_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        dai_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dai_Lbl.setText("Dài");

        cao_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        rong_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rong_Lbl.setText("Rộng");

        veHHCN_Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        veHHCN_Btn.setText("Vẽ hình hộp chữ nhật");
        veHHCN_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                veHHCN_BtnActionPerformed(evt);
            }
        });

        quayLai_Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        quayLai_Btn.setText("Quay lại");
        quayLai_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quayLai_BtnActionPerformed(evt);
            }
        });

        diemGocHHCN_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        diemGocHHCN_Lbl.setText("Điểm gốc");

        xOHHCN_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        xOHHCN_Lbl.setText("xO");

        xOHHCN_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xOHHCN_TF.setText("0");

        yOHHCN_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        yOHHCN_Lbl.setText("yO");

        yOHHCN_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        yOHHCN_TF.setText("0");

        zOHHCN_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        zOHHCN_Lbl.setText("zO");

        zOHHCN_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        zOHHCN_TF.setText("0");

        javax.swing.GroupLayout HHCN_PnLayout = new javax.swing.GroupLayout(HHCN_Pn);
        HHCN_Pn.setLayout(HHCN_PnLayout);
        HHCN_PnLayout.setHorizontalGroup(
            HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HHCN_PnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(veHHCN_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quayLai_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cao_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rong_TF)
                    .addComponent(cao_TF)
                    .addComponent(dai_TF)
                    .addGroup(HHCN_PnLayout.createSequentialGroup()
                        .addGroup(HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(diemGocHHCN_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dai_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rong_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HHCN_PnLayout.createSequentialGroup()
                                .addGroup(HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(xOHHCN_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                    .addComponent(xOHHCN_TF, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(yOHHCN_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(yOHHCN_TF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(zOHHCN_Lbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(zOHHCN_TF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        HHCN_PnLayout.setVerticalGroup(
            HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HHCN_PnLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(diemGocHHCN_Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(HHCN_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(HHCN_PnLayout.createSequentialGroup()
                            .addComponent(xOHHCN_Lbl)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(xOHHCN_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(HHCN_PnLayout.createSequentialGroup()
                            .addComponent(yOHHCN_Lbl)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(yOHHCN_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(HHCN_PnLayout.createSequentialGroup()
                        .addComponent(zOHHCN_Lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zOHHCN_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dai_Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dai_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rong_Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rong_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cao_Lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cao_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(veHHCN_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quayLai_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        tuyChon_LPn.add(HHCN_Pn, "card3");

        tam_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tam_Lbl.setText("Tâm");

        xOHC_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xOHC_TF.setText("0");

        xOHC_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        xOHC_Lbl.setText("xO");

        yOHC_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        yOHC_TF.setText("0");

        yOHC_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        yOHC_Lbl.setText("yO");

        zOHC_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        zOHC_TF.setText("0");

        zOHC_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        zOHC_Lbl.setText("zO");

        r_Lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        r_Lbl.setText("Bán kính r");

        r_TF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        quayLaiHC_Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        quayLaiHC_Btn.setText("Quay lại");
        quayLaiHC_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quayLaiHC_BtnActionPerformed(evt);
            }
        });

        veHC_Btn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        veHC_Btn.setText("Vẽ hình cầu");
        veHC_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                veHC_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HC_PnLayout = new javax.swing.GroupLayout(HC_Pn);
        HC_Pn.setLayout(HC_PnLayout);
        HC_PnLayout.setHorizontalGroup(
            HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HC_PnLayout.createSequentialGroup()
                .addGroup(HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(veHC_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                    .addGroup(HC_PnLayout.createSequentialGroup()
                        .addGroup(HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HC_PnLayout.createSequentialGroup()
                                .addGroup(HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(xOHC_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                                    .addComponent(xOHC_TF))
                                .addGap(18, 18, 18)
                                .addGroup(HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(yOHC_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                                    .addComponent(yOHC_TF))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(zOHC_Lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(zOHC_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(tam_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r_TF, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(quayLaiHC_Btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        HC_PnLayout.setVerticalGroup(
            HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HC_PnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tam_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(xOHC_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yOHC_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HC_PnLayout.createSequentialGroup()
                        .addComponent(zOHC_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(HC_PnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zOHC_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yOHC_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(xOHC_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r_Lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(r_TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(veHC_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quayLaiHC_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        tuyChon_LPn.add(HC_Pn, "card5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(xoaManHinh_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tuyChon_LPn, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel3D, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel3D, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 190, Short.MAX_VALUE)
                        .addComponent(tuyChon_LPn, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)
                        .addComponent(xoaManHinh_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("3D", jPanel1);

        HHCN_Btn1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HHCN_Btn1.setText("Hình Xe - Tịnh Tuyến");
        HHCN_Btn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HHCN_Btn1MouseClicked(evt);
            }
        });
        HHCN_Btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HHCN_Btn1ActionPerformed(evt);
            }
        });

        HHCN_Btn2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HHCN_Btn2.setText("Xóa Màn Hình");
        HHCN_Btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HHCN_Btn2ActionPerformed(evt);
            }
        });

        dongHo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dongHo.setText("Quay + Tỉ Lệ");
        dongHo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dongHoMouseClicked(evt);
            }
        });
        dongHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dongHoActionPerformed(evt);
            }
        });

        YDongHo.setText("0");

        XDongHo.setText("0");
        XDongHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XDongHoActionPerformed(evt);
            }
        });

        jLabel1.setText("X");

        jLabel2.setText("Y");

        DongHoLon.setText("+");
        DongHoLon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DongHoLonMouseClicked(evt);
            }
        });

        Phai.setText("Phải");
        Phai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PhaiMouseClicked(evt);
            }
        });
        Phai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhaiActionPerformed(evt);
            }
        });

        DongHoBe.setText("-");
        DongHoBe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DongHoBeMouseClicked(evt);
            }
        });

        Len.setText("Lên");
        Len.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LenMouseClicked(evt);
            }
        });
        Len.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LenActionPerformed(evt);
            }
        });

        Trai.setText("Trái");
        Trai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TraiMouseClicked(evt);
            }
        });
        Trai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraiActionPerformed(evt);
            }
        });

        Xuong.setText("Xuống");
        Xuong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                XuongMouseClicked(evt);
            }
        });
        Xuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XuongActionPerformed(evt);
            }
        });

        jLabel3.setText("Khoản Cách Tịnh Tuyến :");

        khoanCachTT.setText("0");

        panel2D.setBackground(new java.awt.Color(255, 255, 255));
        panel2D.setPreferredSize(new java.awt.Dimension(900, 300));
        panel2D.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                panel2DAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        panel2D.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                panel2DCaretPositionChanged(evt);
            }
        });

        javax.swing.GroupLayout panel2DLayout = new javax.swing.GroupLayout(panel2D);
        panel2D.setLayout(panel2DLayout);
        panel2DLayout.setHorizontalGroup(
            panel2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 994, Short.MAX_VALUE)
        );
        panel2DLayout.setVerticalGroup(
            panel2DLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel4.setText("A");

        jLabel5.setText("B");

        jLabel6.setText("C");

        jLabel7.setText("G");

        jLabel8.setText("D");

        jLabel9.setText("E");

        jLabel10.setText("F");

        jLabel11.setText("H");

        A.setText("(0;0)");

        B.setText("(0;0)");

        C.setText("(0;0)");

        D.setText("(0;0)");

        F.setText("(0;0)");

        E.setText("(0;0)");

        G.setText("(0;0)");

        H.setText("(0;0)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(DongHoBe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DongHoLon)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(dongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(HHCN_Btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(Len, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(Trai)
                                .addGap(49, 49, 49)
                                .addComponent(Phai))
                            .addComponent(khoanCachTT, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HHCN_Btn1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(Xuong))
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(YDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(XDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(26, 26, 26)
                                            .addComponent(A)
                                            .addGap(4, 4, 4))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(G)
                                            .addGap(5, 5, 5))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel6))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                    .addComponent(C)
                                                    .addGap(5, 5, 5))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                    .addComponent(E)
                                                    .addGap(4, 4, 4)))))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGap(14, 14, 14)
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(B))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(F, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(H, javax.swing.GroupLayout.Alignment.TRAILING)))))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(D))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel10)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(panel2D, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(HHCN_Btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Len)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Phai)
                            .addComponent(Trai))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Xuong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(khoanCachTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(A)
                            .addComponent(B))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(C)
                            .addComponent(D))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(F)
                            .addComponent(E))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11)
                            .addComponent(G)
                            .addComponent(H))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(dongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(XDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(YDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DongHoBe)
                            .addComponent(DongHoLon))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HHCN_Btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel2D, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("2D", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void panel3DAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_panel3DAncestorAdded
        draw3DCoordinate();
        //drawGrid();
    }//GEN-LAST:event_panel3DAncestorAdded

    private void veHHCN_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_veHHCN_BtnActionPerformed
        drawRectangular();
    }//GEN-LAST:event_veHHCN_BtnActionPerformed

    private void xoaManHinh_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaManHinh_BtnActionPerformed
        clear();
    }//GEN-LAST:event_xoaManHinh_BtnActionPerformed

    private void veHLP_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_veHLP_BtnActionPerformed
        drawCube();
    }//GEN-LAST:event_veHLP_BtnActionPerformed

    private void HHCN_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HHCN_BtnActionPerformed
        changePanel(tuyChon_LPn, HHCN_Pn);
    }//GEN-LAST:event_HHCN_BtnActionPerformed

    private void HLP_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HLP_BtnActionPerformed
        changePanel(tuyChon_LPn, HLP_Pn);
    }//GEN-LAST:event_HLP_BtnActionPerformed

    private void quayLai_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quayLai_BtnActionPerformed
        changePanel(tuyChon_LPn, tuyChon_Pn);
    }//GEN-LAST:event_quayLai_BtnActionPerformed

    private void quayLai_Btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quayLai_Btn1ActionPerformed
        changePanel(tuyChon_LPn, tuyChon_Pn);
    }//GEN-LAST:event_quayLai_Btn1ActionPerformed

    private void HLP_Btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HLP_Btn1ActionPerformed
        changePanel(tuyChon_LPn, HC_Pn);
    }//GEN-LAST:event_HLP_Btn1ActionPerformed

    private void veHC_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_veHC_BtnActionPerformed
        drawGlobular();
    }//GEN-LAST:event_veHC_BtnActionPerformed

    private void quayLaiHC_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quayLaiHC_BtnActionPerformed
        changePanel(tuyChon_LPn, tuyChon_Pn);
    }//GEN-LAST:event_quayLaiHC_BtnActionPerformed

    private void HHCN_Btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HHCN_Btn1ActionPerformed
    }//GEN-LAST:event_HHCN_Btn1ActionPerformed

    private void HHCN_Btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HHCN_Btn2ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_HHCN_Btn2ActionPerformed

    private void dongHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dongHoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dongHoActionPerformed

    public void drawTextBX(double x1, double y1, double x2, double y2, String A, String B) {
        // Dua ve tam toa do
        x1 = x1 * this.step + width / 2;
        y1 = height / 2 - y1 * this.step;
        x2 = x2 * this.step + width / 2;
        y2 = height / 2 - y2 * this.step;
        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.setColor(Color.blue);
        g1.setFont(new Font("Arial", Font.BOLD, 18));

        double dx = x2 - x1;
        double dy = y2 - y1;
        double step;
        if (Math.abs(dx) >= Math.abs(dy)) {
            step = Math.abs(dx);
        } else {
            step = Math.abs(dy);
        }
        double x_inc = dx / step;
        double y_inc = dy / step;

        double x = x1;
        double y = y1;
        putPixel(x, y);
        g1.drawString(A, (int) (x - 10), (int) y);
        int i;
        for (i = 0; i <= step; i++) {
            x = x + x_inc;
            y = y + y_inc;
            putPixel(Math.round(x), Math.round(y));
        }
        g1.drawString(B, (int) (x - 10), (int) y);
    }

    public void drawLineDDAText(double x1, double y1, double x2, double y2, String A, String B) {
        // Dua ve tam toa do
        x1 = x1 * this.step + width / 2;
        y1 = height / 2 - y1 * this.step;
        x2 = x2 * this.step + width / 2;
        y2 = height / 2 - y2 * this.step;

        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.setColor(Color.blue);
        g1.setFont(new Font("Arial", Font.BOLD, 18));

        double dx = x2 - x1;
        double dy = y2 - y1;
        double step;
        if (Math.abs(dx) >= Math.abs(dy)) {
            step = Math.abs(dx);
        } else {
            step = Math.abs(dy);
        }
        double x_inc = dx / step;
        double y_inc = dy / step;

        double x = x1;
        double y = y1;
        putPixel(x, y);
        g1.drawString(A, (int) (x - 10), (int) y);
        int i;
        for (i = 0; i <= step; i++) {
            x = x + x_inc;
            y = y + y_inc;
            putPixel(Math.round(x), Math.round(y));
        }
        g1.drawString(B, (int) (x - 10), (int) y);
    }

    private void HHCN_Btn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HHCN_Btn1MouseClicked
        // TODO add your handling code here:
        veChiecXe();
    }//GEN-LAST:event_HHCN_Btn1MouseClicked

    private void LenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LenActionPerformed

    private void TraiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TraiActionPerformed

    private void XuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_XuongActionPerformed

    private void dongHoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dongHoMouseClicked
        // TODO add your handling code here:
        clear2D();
        veDongHo(2);
    }//GEN-LAST:event_dongHoMouseClicked

    private void LenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LenMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            veXe(Len.getText(), Integer.parseInt(khoanCachTT.getText()));
        } catch (InterruptedException ex) {
            Logger.getLogger(Project.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LenMouseClicked

    private void PhaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhaiMouseClicked
        try {
            // TODO add your handling code here:
            veXe(Phai.getText(), Integer.parseInt(khoanCachTT.getText()));
        } catch (InterruptedException ex) {
            Logger.getLogger(Project.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PhaiMouseClicked

    private void XuongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XuongMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            veXe(Xuong.getText(), Integer.parseInt(khoanCachTT.getText()));
        } catch (InterruptedException ex) {
            Logger.getLogger(Project.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_XuongMouseClicked

    private void TraiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TraiMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            veXe(Trai.getText(), Integer.parseInt(khoanCachTT.getText()));
        } catch (InterruptedException ex) {
            Logger.getLogger(Project.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TraiMouseClicked

    private void panel2DAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_panel2DAncestorAdded
        // TODO add your handling code here:
        draw2DCoordinate();
    }//GEN-LAST:event_panel2DAncestorAdded

    private void PhaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhaiActionPerformed

    private void panel2DCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_panel2DCaretPositionChanged
        // TODO add your handling code here:
        toaDoXe();
    }//GEN-LAST:event_panel2DCaretPositionChanged

    private void DongHoBeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DongHoBeMouseClicked
        // TODO add your handling code here:
        if(bkDongHo > 1){
            veDongHo(bkDongHo - 1);
        }else{
            JOptionPane.showMessageDialog(this, "Không Được Nhỏ Hơn Nữa");
        }
    }//GEN-LAST:event_DongHoBeMouseClicked

    private void XDongHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XDongHoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_XDongHoActionPerformed

    private void DongHoLonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DongHoLonMouseClicked
        // TODO add your handling code here:
        veDongHo(bkDongHo+1);
    }//GEN-LAST:event_DongHoLonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Project().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel A;
    private javax.swing.JLabel B;
    private javax.swing.JLabel C;
    private javax.swing.JLabel D;
    private javax.swing.JButton DongHoBe;
    private javax.swing.JButton DongHoLon;
    private javax.swing.JLabel E;
    private javax.swing.JLabel F;
    private javax.swing.JLabel G;
    private javax.swing.JLabel H;
    private javax.swing.JPanel HC_Pn;
    private javax.swing.JButton HHCN_Btn;
    private javax.swing.JButton HHCN_Btn1;
    private javax.swing.JButton HHCN_Btn2;
    private javax.swing.JPanel HHCN_Pn;
    private javax.swing.JButton HLP_Btn;
    private javax.swing.JButton HLP_Btn1;
    private javax.swing.JPanel HLP_Pn;
    private javax.swing.JButton Len;
    private javax.swing.JButton Phai;
    private javax.swing.JButton Trai;
    private javax.swing.JTextField XDongHo;
    private javax.swing.JButton Xuong;
    private javax.swing.JTextField YDongHo;
    private javax.swing.JLabel cao_Lbl;
    private javax.swing.JTextField cao_TF;
    private javax.swing.JLabel dai_Lbl;
    private javax.swing.JTextField dai_TF;
    private javax.swing.JLabel diemGocHHCN_Lbl;
    private javax.swing.JLabel diemGocHLP_Lbl;
    private javax.swing.JLabel doDaiCanhHLP_Lbl;
    private javax.swing.JTextField doDaiCanhHLP_TF;
    private javax.swing.JButton dongHo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField khoanCachTT;
    private javax.swing.JPanel panel2D;
    private javax.swing.JPanel panel3D;
    private javax.swing.JButton quayLaiHC_Btn;
    private javax.swing.JButton quayLai_Btn;
    private javax.swing.JButton quayLai_Btn1;
    private javax.swing.JLabel r_Lbl;
    private javax.swing.JTextField r_TF;
    private javax.swing.JLabel rong_Lbl;
    private javax.swing.JTextField rong_TF;
    private javax.swing.JLabel tam_Lbl;
    private javax.swing.JLayeredPane tuyChon_LPn;
    private javax.swing.JPanel tuyChon_Pn;
    private javax.swing.JButton veHC_Btn;
    private javax.swing.JButton veHHCN_Btn;
    private javax.swing.JButton veHLP_Btn;
    private javax.swing.JLabel xOHC_Lbl;
    private javax.swing.JTextField xOHC_TF;
    private javax.swing.JLabel xOHHCN_Lbl;
    private javax.swing.JTextField xOHHCN_TF;
    private javax.swing.JLabel xOHLP_Lbl;
    private javax.swing.JTextField xOHLP_TF;
    private javax.swing.JButton xoaManHinh_Btn;
    private javax.swing.JLabel yOHC_Lbl;
    private javax.swing.JTextField yOHC_TF;
    private javax.swing.JLabel yOHHCN_Lbl;
    private javax.swing.JTextField yOHHCN_TF;
    private javax.swing.JLabel yOHLP_Lbl;
    private javax.swing.JTextField yOHLP_TF;
    private javax.swing.JLabel zOHC_Lbl;
    private javax.swing.JTextField zOHC_TF;
    private javax.swing.JLabel zOHHCN_Lbl;
    private javax.swing.JTextField zOHHCN_TF;
    private javax.swing.JLabel zOHLP_Lbl;
    private javax.swing.JTextField zOHLP_TF;
    // End of variables declaration//GEN-END:variables

    public void changePanel(JLayeredPane jLayeredPane, JPanel panel) {
        jLayeredPane.removeAll();
        jLayeredPane.add(panel);
        jLayeredPane.repaint();
        jLayeredPane.revalidate();
    }

    public void clear() {
        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.clearRect(0, 0, width, height);
//        panel3D.setBackground(Color.white);
        g3D = panel3D.getGraphics();
        draw3DCoordinate();
        //drawGrid();
    }

    public void clear2D() {
        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.clearRect(0, 0, width, height);
        g3D = panel2D.getGraphics();
        draw2DCoordinate();
    }

    public void draw2DCoordinate() {
        height = panel2D.getBounds().height; // Lay chieu cao cua Panel
        width = panel2D.getBounds().width; // Lay chieu dai cua Panel

        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.setStroke(new BasicStroke(3));
        g1.setColor(Color.BLACK);
        g1.drawLine(0, height / 2, width, height / 2); // Ve truc Ox
        g1.drawLine(width / 2, 0, width / 2, height); // Ve truc Oy       

        g1.setColor(Color.blue);
        g1.setFont(new Font("Arial", Font.BOLD, 18));
        g1.drawString("x", width - 20, height / 2 - 10);
        g1.drawString("y", width / 2 + 10, 0 + 10);
        g1.drawString("O", width / 2 - 18, height / 2 - 4);
    }

    public void draw3DCoordinate() {
        height = panel3D.getBounds().height; // Lay chieu cao cua Panel
        width = panel3D.getBounds().width; // Lay chieu dai cua Panel

        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.setStroke(new BasicStroke(3));
        g1.setColor(Color.BLACK);
        g1.drawLine(width / 2, height / 2, width, height / 2); // Ve truc Ox
        g1.drawLine(width / 2, 0, width / 2, height / 2); // Ve truc Oz       
        g1.drawLine(width / 2, height / 2, 0, width / 2 + height / 2); // Ve truc Oy

        int x1 = 4;
        for (int i = 0; i <= width / 2; i++) {
            if (i % (3 * x1) == 2 * x1) {
                g1.drawLine(i, height / 2, i - 2 * x1, height / 2); // Ox'
            }
        }
        for (int i = height + 1; i >= height / 2; i--) {
            int x = height - i;
            if (x % (3 * x1) == 2 * x1) {
                g1.drawLine(width / 2, i, width / 2, i - 2 * x1); // Oy'
            }
        }
        for (int i = width / 2; i <= width; i++) {
            int x = i - width / 2;
            if (x % (3 * x1) == 2 * x1) {
                g1.drawLine(i, height / 2 - x, i - 2 * x1, height / 2 - (x - 2 * x1)); // Oz'
            }
        }

//        int inc = 1; // Don vi duong
//        int desc = -1; // Don vi am        
//        for (int i = 0; i < width; i += step) 
//        {
//            g3D.setColor(Color.BLACK);
//            g3D.drawLine(width/2 + i, height/2 - 2, width/2 + i, height/2 + 2); // Ve cac gach cua Ox
//            g3D.drawLine(width/2 - i, height/2 - 2, width/2 - i, height/2 + 2); // Ve cac gach cua Ox'
//            g3D.drawLine(width/2 - 2, height/2 - i, width/2 + 2, height/2 - i); // Ve cac gach cua Oy
//            g3D.drawLine(width/2 - 2, height/2 + i, width/2 + 2, height/2 + i); // Ve cac gach cua Oy'
//            
//            
//            g3D.setColor(Color.BLUE);
//            g3D.drawString(String.valueOf(inc), width/2 + i + step - 3, height/2 + 15); // Danh so don vi cho Ox
//            g3D.drawString(String.valueOf(desc), width/2 - i - step - 7, height/2 + 15); // Danh so don vi cho Ox'
//            g3D.drawString(String.valueOf(inc), width/2 - 15, height/2 - i - step + 5); // Danh so don vi cho Oy
//            g3D.drawString(String.valueOf(desc), width/2 - 15, height/2 + i + step + 5); // Danh so don vi cho Oy'
//            
//            inc++;
//            desc--;         
//        }    
        g1.setColor(Color.blue);
        g1.setFont(new Font("Arial", Font.BOLD, 18));
        g1.drawString("x", width - 20, height / 2 - 10);
        g1.drawString("z", width / 2 + 10, 0 + 10);
        g1.drawString("O", width / 2 - 18, height / 2 - 4);
        g1.drawString("y", width / 4 - 10, height - 5);
    }

    // De khong bi mat do thi khi zoom len hay di chuyen frame
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        draw3DCoordinate();
        //drawGrid();
    }

    public void putPixel(double x, double y) {
        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.setColor(Color.BLACK);
        g1.fillRect((int) x, (int) y, 3, 3);
    }

    public void put4Pixel(double xO, double yO, double x, double y) // Ve ellipse
    {
        putPixel(xO + x, yO + y);
        putPixel(xO - x, yO + y);
        putPixel(xO + x, yO - y);
        putPixel(xO - x, yO - y);
    }

    public void put8Pixel(double xO, double yO, double x, double y) // Ve duong tron
    {
        putPixel(xO + x, yO + y); // (x,y)
        putPixel(xO - x, yO + y); // (-x, y)
        putPixel(xO + x, yO - y); // (x, -y)
        putPixel(xO - x, yO - y); // (-x , -y)
        putPixel(xO + y, yO + x); // (y, x)
        putPixel(xO - y, yO + x); // (-y, x)
        putPixel(xO + y, yO - x); // (y, -x)
        putPixel(xO - y, yO - x); // (-y -x)
    }

    public void putPixel3D(double x, double y) {
        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.setColor(Color.RED);

        // Dua ve goc toa do
        double newX = x * step + width / 2;
        double newY = height / 2 - y * step;

        g1.fillRect((int) newX, (int) newY, 4, 4);
    }

    public void putText3D(String pointName, double x, double y, double z) {
        Graphics2D g1 = (Graphics2D) g3D.create();

        double newX, newY;
        newX = cavalierProjection(x, y) * step + width / 2;
        newY = height / 2 - cavalierProjection(z, y) * step;

        g1.setColor(Color.red);
        g1.setFont(new Font("Arial", Font.BOLD, 18));
        g1.drawString(pointName + "(" + x + "," + y + "," + z + ")", (float) newX + 5, (float) newY + 10);
    }

    public double cavalierProjection(double a, double b) {
        // Chieu len truc Oxz
        return a - b * (1 - Math.sqrt(2) / 2);
    }

    public void drawGrid() {
        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.setColor(Color.black);

        // Luoi doc
        for (int x = 0; x < width; x += step) {
            g1.drawLine(x, 0, x, height);
        }

        // Luoi ngang
        for (int y = 0; y < height; y += step) {
            g1.drawLine(0, y, width, y);
        }
    }

    public void drawLineDDA(double x1, double y1, double x2, double y2) {
        // Dua ve tam toa do
        x1 = x1 * this.step + width / 2;
        y1 = height / 2 - y1 * this.step;
        x2 = x2 * this.step + width / 2;
        y2 = height / 2 - y2 * this.step;

        double dx = x2 - x1;
        double dy = y2 - y1;
        double step;
        if (Math.abs(dx) >= Math.abs(dy)) {
            step = Math.abs(dx);
        } else {
            step = Math.abs(dy);
        }
        double x_inc = dx / step;
        double y_inc = dy / step;

        double x = x1;
        double y = y1;
        putPixel(x, y);

        for (int i = 0; i <= step; i++) {
            x = x + x_inc;
            y = y + y_inc;
            putPixel(Math.round(x), Math.round(y));
        }
    }

    public void drawDashedLineDDA(double x1, double y1, double x2, double y2) {
        // Dua ve tam toa do
        x1 = x1 * this.step + width / 2;
        y1 = height / 2 - y1 * this.step;
        x2 = x2 * this.step + width / 2;
        y2 = height / 2 - y2 * this.step;

        double dx = x2 - x1;
        double dy = y2 - y1;
        double step;
        if (Math.abs(dx) >= Math.abs(dy)) {
            step = Math.abs(dx);
        } else {
            step = Math.abs(dy);
        }
        double x_inc = dx / step;
        double y_inc = dy / step;

        double x = x1;
        double y = y1;
        putPixel(x, y);

        // Dem so pixel da put. Khi dat den 1 so luong nhat dinh thi ngung khong put nua
        int count = 0;
        for (int i = 0; i <= step; i++) {
            count++;
            x = x + x_inc;
            y = y + y_inc;
            if (count >= 11 && count <= 15) // Neu da put du 10 pixel thi 5 pixel tiep theo khong put (x, y van tiep tuc tang)
            {
                if (count == 15) {
                    count = 0; // Lap lai viec put pixel
                }
                continue;
            }
            putPixel(Math.round(x), Math.round(y));
        }
    }

    public void drawDDAWithCondition(double x1, double y1, double x2, double y2, String circumstance) {
        if (circumstance.equals("Straight")) {
            if (x1 > x2) {
                drawLineDDA(x2, y2, x1, y1);
            } else {
                drawLineDDA(x1, y1, x2, y2);
            }
        } else if (circumstance.equals("Dashed")) {
            if (x1 > x2) {
                drawDashedLineDDA(x2, y2, x1, y1);
            } else {
                drawDashedLineDDA(x1, y1, x2, y2);
            }
        }
    }

    public void drawRectangular() {
        // Diem goc O
        double xO = Double.valueOf(xOHHCN_TF.getText());
        double yO = Double.valueOf(yOHHCN_TF.getText());
        double zO = Double.valueOf(zOHHCN_TF.getText());

        double xO1 = cavalierProjection(xO, yO);
        double yO1 = cavalierProjection(zO, yO);

        // A
        double xA = Double.valueOf(dai_TF.getText()) + xO;
        double yA = 0 + yO;
        double zA = 0 + zO;

        double xA1 = cavalierProjection(xA, yA);
        double yA1 = cavalierProjection(zA, yA);

        // B
        double xB = Double.valueOf(dai_TF.getText()) + xO;
        double yB = Double.valueOf(rong_TF.getText()) + yO;
        double zB = 0 + zO;

        double xB1 = cavalierProjection(xB, yB);
        double yB1 = cavalierProjection(zB, yB);

        // C
        double xC = 0 + xO;
        double yC = Double.valueOf(rong_TF.getText()) + yO;
        double zC = 0 + zO;

        double xC1 = cavalierProjection(xC, yC);
        double yC1 = cavalierProjection(zC, yC);

        // D
        double xD = Double.valueOf(dai_TF.getText()) + xO;
        double yD = 0 + yO;
        double zD = Double.valueOf(cao_TF.getText()) + zO;

        double xD1 = cavalierProjection(xD, yD);
        double yD1 = cavalierProjection(zD, yD);

        // E 
        double xE = 0 + xO;
        double yE = 0 + yO;
        double zE = Double.valueOf(cao_TF.getText()) + zO;

        double xE1 = cavalierProjection(xE, yE);
        double yE1 = cavalierProjection(zE, yE);

        // F
        double xF = 0 + xO;
        double yF = Double.valueOf(rong_TF.getText()) + yO;
        double zF = Double.valueOf(cao_TF.getText()) + zO;

        double xF1 = cavalierProjection(xF, yF);
        double yF1 = cavalierProjection(zF, yF);

        // G
        double xG = Double.valueOf(dai_TF.getText()) + xO;
        double yG = Double.valueOf(rong_TF.getText()) + yO;
        double zG = Double.valueOf(cao_TF.getText()) + zO;

        double xG1 = cavalierProjection(xG, yG);
        double yG1 = cavalierProjection(zG, yG);

        putPixel3D(xO1, yO1);
        putPixel3D(xA1, yA1);
        putPixel3D(xB1, yB1);
        putPixel3D(xC1, yC1);
        putPixel3D(xD1, yD1);
        putPixel3D(xE1, yE1);
        putPixel3D(xF1, yF1);
        putPixel3D(xG1, yG1);

        putText3D("O", xO, yO, zO);
        putText3D("A", xA, yA, zA);
        putText3D("B", xB, yB, zB);
        putText3D("C", xC, yC, zC);
        putText3D("D", xD, yD, zD);
        putText3D("E", xE, yE, zE);
        putText3D("F", xF, yF, zF);
        putText3D("G", xG, yG, zG);

        drawDDAWithCondition(xA1, yA1, xB1, yB1, "Straight"); // AB
        drawDDAWithCondition(xA1, yA1, xD1, yD1, "Straight"); // AD
        drawDDAWithCondition(xB1, yB1, xC1, yC1, "Straight"); // BC
        drawDDAWithCondition(xB1, yB1, xG1, yG1, "Straight"); // BG       
        drawDDAWithCondition(xC1, yC1, xF1, yF1, "Straight"); // CF
        drawDDAWithCondition(xD1, yD1, xG1, yG1, "Straight"); // DG
        drawDDAWithCondition(xE1, yE1, xF1, yF1, "Straight"); // EF        
        drawDDAWithCondition(xE1, yE1, xD1, yD1, "Straight"); // ED        
        drawDDAWithCondition(xF1, yF1, xG1, yG1, "Straight"); // FG

        drawDDAWithCondition(xO1, yO1, xC1, yC1, "Dashed"); // OC
        drawDDAWithCondition(xO1, yO1, xA1, yA1, "Dashed"); // OA
        drawDDAWithCondition(xO1, yO1, xE1, yE1, "Dashed"); // EO
    }

    public void drawCube() {
        // Diem goc O
        double xO = Double.valueOf(xOHLP_TF.getText());
        double yO = Double.valueOf(yOHLP_TF.getText());
        double zO = Double.valueOf(zOHLP_TF.getText());

        double xO1 = cavalierProjection(xO, yO);
        double yO1 = cavalierProjection(zO, yO);

        // A
        double xA = Double.valueOf(doDaiCanhHLP_TF.getText()) + xO;
        double yA = 0 + yO;
        double zA = 0 + zO;

        double xA1 = cavalierProjection(xA, yA);
        double yA1 = cavalierProjection(zA, yA);

        // B
        double xB = Double.valueOf(doDaiCanhHLP_TF.getText()) + xO;
        double yB = Double.valueOf(doDaiCanhHLP_TF.getText()) + yO;
        double zB = 0 + zO;

        double xB1 = cavalierProjection(xB, yB);
        double yB1 = cavalierProjection(zB, yB);

        // C
        double xC = 0 + xO;
        double yC = Double.valueOf(doDaiCanhHLP_TF.getText()) + yO;
        double zC = 0 + zO;

        double xC1 = cavalierProjection(xC, yC);
        double yC1 = cavalierProjection(zC, yC);

        // D
        double xD = Double.valueOf(doDaiCanhHLP_TF.getText()) + xO;
        double yD = 0 + yO;
        double zD = Double.valueOf(doDaiCanhHLP_TF.getText()) + zO;

        double xD1 = cavalierProjection(xD, yD);
        double yD1 = cavalierProjection(zD, yD);

        // E 
        double xE = 0 + xO;
        double yE = 0 + yO;
        double zE = Double.valueOf(doDaiCanhHLP_TF.getText()) + zO;

        double xE1 = cavalierProjection(xE, yE);
        double yE1 = cavalierProjection(zE, yE);

        // F
        double xF = 0 + xO;
        double yF = Double.valueOf(doDaiCanhHLP_TF.getText()) + yO;
        double zF = Double.valueOf(doDaiCanhHLP_TF.getText()) + zO;

        double xF1 = cavalierProjection(xF, yF);
        double yF1 = cavalierProjection(zF, yF);

        // G
        double xG = Double.valueOf(doDaiCanhHLP_TF.getText()) + xO;
        double yG = Double.valueOf(doDaiCanhHLP_TF.getText()) + yO;
        double zG = Double.valueOf(doDaiCanhHLP_TF.getText()) + zO;

        double xG1 = cavalierProjection(xG, yG);
        double yG1 = cavalierProjection(zG, yG);

        putPixel3D(xO1, yO1);
        putPixel3D(xA1, yA1);
        putPixel3D(xB1, yB1);
        putPixel3D(xC1, yC1);
        putPixel3D(xD1, yD1);
        putPixel3D(xE1, yE1);
        putPixel3D(xF1, yF1);
        putPixel3D(xG1, yG1);

        putText3D("O", xO, yO, zO);
        putText3D("A", xA, yA, zA);
        putText3D("B", xB, yB, zB);
        putText3D("C", xC, yC, zC);
        putText3D("D", xD, yD, zD);
        putText3D("E", xE, yE, zE);
        putText3D("F", xF, yF, zF);
        putText3D("G", xG, yG, zG);

        drawDDAWithCondition(xA1, yA1, xB1, yB1, "Straight"); // AB
        drawDDAWithCondition(xA1, yA1, xD1, yD1, "Straight"); // AD
        drawDDAWithCondition(xB1, yB1, xC1, yC1, "Straight"); // BC
        drawDDAWithCondition(xB1, yB1, xG1, yG1, "Straight"); // BG       
        drawDDAWithCondition(xC1, yC1, xF1, yF1, "Straight"); // CF
        drawDDAWithCondition(xD1, yD1, xG1, yG1, "Straight"); // DG
        drawDDAWithCondition(xE1, yE1, xF1, yF1, "Straight"); // EF        
        drawDDAWithCondition(xE1, yE1, xD1, yD1, "Straight"); // ED        
        drawDDAWithCondition(xF1, yF1, xG1, yG1, "Straight"); // FG

        drawDDAWithCondition(xO1, yO1, xC1, yC1, "Dashed"); // OC
        drawDDAWithCondition(xO1, yO1, xA1, yA1, "Dashed"); // OA
        drawDDAWithCondition(xO1, yO1, xE1, yE1, "Dashed"); // EO        
    }

    public void drawCircleMidPoint(double xO, double yO, double r) {
        xO = xO * step + width / 2;
        yO = height / 2 - yO * step;
        r = r * step;

        double x = 0;
        double y = r;
        double p = 1 - r;

        put8Pixel(xO, yO, x, y);

        while (x < y) {
            if (p < 0) {
                p += 2 * x + 3;
            } else {
                p += 2 * (x - y) + 5;
                y--;
            }
            x++;
            put8Pixel(xO, yO, x, y);
        }
    }

    public void drawEllipseMidPoint(double xO, double yO, double a, double b) {
        xO = xO * step + width / 2;
        yO = height / 2 - yO * step;
        a = a * step;
        b = b * step;

        double x, y, fx, fy, a2, b2, p, q;
        x = 0;
        y = b;
        a2 = a * a;
        b2 = b * b;
        fx = 0;
        fy = 2 * a2 * y;
        put4Pixel(xO, yO, x, y);
        p = Math.round(b2 - a2 * b + a2 / 4);

        int count = 0;
        while (fx < fy) {
            count++;
            x++;
            fx = fx + 2 * b2;
            if (p < 0) {
                p = p + b2 * (2 * x + 3);
            } else {
                y--;
                p = p + b2 * (2 * x + 3) + a2 * (2 - 2 * y);
                fy = fy - 2 * a2;
            }
            if (count >= 11 && count <= 15) {
                if (count == 15) {
                    count = 0;
                }
                continue;
            }
            put4Pixel(xO, yO, x, y);
        }

        int count1 = 0;
        q = Math.round(b2 * (x + 0.5) * (x + 0.5) + a2 * (y - 1) * (y - 1) - a2 * b2);
        while (y > 0) {
            count1++;
            y--;
            fy = fy - 2 * a2;
            if (q < 0) {
                x++;
                q = q + b2 * (2 * x + 2) + a2 * (3 - 2 * y);
                fx = fx + 2 * b2;
            } else {
                q = q + a2 * (3 - 2 * y);
            }
            if (count1 >= 11 && count1 <= 15) {
                if (count1 == 15) {
                    count1 = 0;
                }
                continue;
            }
            put4Pixel(xO, yO, x, y);
        }
    }

    public void drawGlobular() {
        double xO = Double.valueOf(xOHC_TF.getText());
        double yO = Double.valueOf(yOHC_TF.getText());
        double zO = Double.valueOf(zOHC_TF.getText());

        double xO1 = cavalierProjection(xO, yO);
        double yO1 = cavalierProjection(zO, yO);

        double r = Double.valueOf(r_TF.getText());

        putPixel3D(xO1, yO1);
        putText3D("O", xO, yO, zO);

        drawCircleMidPoint(xO1, yO1, r);

        double a = r;
        double b = r * (1 - Math.sqrt(2) / 2);

        drawEllipseMidPoint(xO1, yO1, a, b);
    }

    public void rotate(Point pt1, Point pt2, double alpha) {
        pt1.setX(pt1.getX() * step + width / 2);
        pt1.setY(height / 2 - pt1.getY() * step);
        pt2.setX(pt2.getX() * step + width / 2);
        pt2.setY(height / 2 - pt2.getY() * step);

        // Dung cho ma tran tinh tien tro ve vi tri cu
        Point originalPosition = new Point(pt2.getX(), pt2.getY());

        double array[] = new double[3];

        // Ma tran tinh tien ve goc toa do theo pt2
        double[][] translateToOMatrix = new double[3][3];
        translateToOMatrix = Matrix.initializeTranslateToOMatrix(translateToOMatrix, pt2);

        // Chuyen diem pt1 sang ma tran [1,3]    
        array = Matrix.convertPointToMatrix(pt1);
        // Nhan pt1 voi ma tran tinh tien o tren, thu duoc 1 diem moi 
        Point tempPoint1 = Matrix.multiplyMatrix(array, translateToOMatrix);

        // Ma tran quay quanh goc toa do 1 goc a
        double[][] rotationMatrix = new double[3][3];
        rotationMatrix = Matrix.initializeRotationMatrix(rotationMatrix, alpha);

        // Chuyen diem tempPoint1 thu duoc tu phep nhan ma tran o tren sang ma tran [1,3]
        array = Matrix.convertPointToMatrix(tempPoint1);
        // Nhan ma tran nay voi ma tran quay, thu duoc 1 diem moi
        Point tempPoint2 = Matrix.multiplyMatrix(array, rotationMatrix);

        // Ma tran tinh tien tro lai ve vi tri cu theo pt2 (pt2 = originalPosition)
        double[][] retranslationMatrix = new double[3][3];
        retranslationMatrix = Matrix.initializeTranslationMatrix(retranslationMatrix, originalPosition);

        // Chuyen diem tempPoint2 thu duoc tu phep nhan ma tran o tren sang ma tran [1,3]
        array = Matrix.convertPointToMatrix(tempPoint2);
        // Nhan ma tran nay voi ma tran tinh tien ve vi tru cu, thu duoc 1 diem moi => Diem can tim
        Point tempPoint3 = Matrix.multiplyMatrix(array, retranslationMatrix);

        putPixel(tempPoint3.getX(), tempPoint3.getY());

        Graphics2D g1 = (Graphics2D) g2D.create();
        g1.setColor(Color.black);
        g1.drawString("A1 (" + (double) Math.round((tempPoint3.getX() - width / 2) / step * 100) / 100
                + ","
                + (double) Math.round((tempPoint3.getY() - height / 2) / -step * 100) / 100 + ")",
                (int) tempPoint3.getX(), (int) tempPoint3.getY() + 20);
    }

    public Point translate(Point pt, Point displacement) {
        double[] array = new double[3];
        double[][] matrix2D = new double[3][3];

        // Chuyen diem goc ve ma tran [1,3]
        array = Matrix.convertPointToMatrix(pt);

        // Ma tran tinh tien (displacement: do doi)
        matrix2D = Matrix.initializeTranslationMatrix(matrix2D, displacement);

        // Nhan ma tran cua diem goc voi ma tran tinh tien, thu duoc 1 diem moi => Ket qua
        Point newPoint = Matrix.multiplyMatrix(array, matrix2D);

        return newPoint;
//        newPoint.setX(newPoint.getX() * step + width / 2);
//        newPoint.setY(height / 2 - newPoint.getY() * step);

//        putPixel(newPoint.getX(), newPoint.getY());
//
//        Graphics2D g1 = (Graphics2D) g2D.create();
//        g1.setColor(Color.black);
//        g1.drawString("A1 (" + (double) Math.round((newPoint.getX() - width / 2) / step * 100) / 100
//                + ","
//                + (double) Math.round((newPoint.getY() - height / 2) / -step * 100) / 100 + ")",
//                (int) newPoint.getX(), (int) newPoint.getY() + 20);
    }

    public void scale(Point pt, Point ratio) {
        double[] array = new double[3];
        double[][] matrix2D = new double[3][3];

        // Chuyen diem goc ve ma tran [1,3]
        array = Matrix.convertPointToMatrix(pt);

        // Ma tran bien doi ti le
        matrix2D = Matrix.initializeScalingMatrix(matrix2D, ratio);

        // Nhan ma tran cua diem goc voi ma tran bien doi ti le, thu duoc 1 diem moi => Ket qua
        Point newPoint = Matrix.multiplyMatrix(array, matrix2D);

        newPoint.setX(newPoint.getX() * step + width / 2);
        newPoint.setY(height / 2 - newPoint.getY() * step);

        putPixel(newPoint.getX(), newPoint.getY());

        Graphics2D g1 = (Graphics2D) g2D.create();
        g1.setColor(Color.black);
        g1.drawString("A1 (" + (double) Math.round((newPoint.getX() - width / 2) / step * 100) / 100
                + ","
                + (double) Math.round((newPoint.getY() - height / 2) / -step * 100) / 100 + ")",
                (int) newPoint.getX(), (int) newPoint.getY() + 20);
    }

    public void symmetricWithRespectTo(Point pt, String circumstance) {
        double[] array = new double[3];
        double[][] matrix2D = new double[3][3];

        array = Matrix.convertPointToMatrix(pt);
        if (circumstance.equals("Ox")) {
            matrix2D = Matrix.initializeSymmetricWithRespectToOxMatrix(matrix2D);
        } else if (circumstance.equals("Oy")) {
            matrix2D = Matrix.initializeSymmetricWithRespectToOyMatrix(matrix2D);
        } else if (circumstance.equals("O")) {
            matrix2D = Matrix.initializeSymmetricWithRespectToOMatrix(matrix2D);
        }
        Point newPoint = Matrix.multiplyMatrix(array, matrix2D);
        newPoint.setX(newPoint.getX() * step + width / 2);
        newPoint.setY(height / 2 - newPoint.getY() * step);

        putPixel(newPoint.getX(), newPoint.getY());

        Graphics2D g1 = (Graphics2D) g2D.create();
        g1.setColor(Color.black);
        g1.drawString("A1 (" + (double) Math.round((newPoint.getX() - width / 2) / step * 100) / 100
                + ","
                + (double) Math.round((newPoint.getY() - height / 2) / -step * 100) / 100 + ")",
                (int) newPoint.getX(), (int) newPoint.getY() + 20);
    }

    public Point quaPhai(Point x, double i) {
        x.setX(x.getX() + i);
        x.setY(x.getY());
        return x;
    }

    public Point quaTrai(Point x, double i) {
        x.setX(x.getX() - i);
        x.setY(x.getY());
        return x;
    }

    public Point diXuong(Point x, double i) {
        x.setX(x.getX());
        x.setY(x.getY() - i);
        return x;
    }

    public Point diLen(Point x, double i) {
        x.setX(x.getX());
        x.setY(x.getY() + i);
        return x;
    }

    //Hàm Vẽ Chiếc Xe
    public void veChiecXe() {
        Graphics2D g1 = (Graphics2D) g3D.create();
        g1.setPaint(Color.BLACK);
        DecimalFormat format = new DecimalFormat("0.#");
        // Vẽ Mui Xe
        drawLineDDAText(muiXe1.getX(), muiXe1.getY(), muiXe2.getX(), muiXe2.getY(), "D", "A");
        drawLineDDAText(muiXe2.getX(), muiXe2.getY(), muiXe3.getX(), muiXe3.getY(), "A", "B");
        drawLineDDAText(muiXe3.getX(), muiXe3.getY(), muiXe4.getX(), muiXe4.getY(), "B", "E");
        // Vẽ Thân Xe
        drawLineDDAText(thanXe1.getX(), thanXe1.getY(), thanXe2.getX(), thanXe2.getY(), "G", "C");
        drawLineDDAText(thanXe2.getX(), thanXe2.getY(), thanXe3.getX(), thanXe3.getY(), "C", "F");
        drawLineDDAText(thanXe3.getX(), thanXe3.getY(), thanXe4.getX(), thanXe4.getY(), "F", "H");
        drawLineDDAText(thanXe1.getX(), thanXe1.getY(), thanXe4.getX(), thanXe4.getY(), "G", "H");
        //Bánh Xe
        g1.fillOval((int) (banhXe1.getX()), (int) banhXe1.getY(), (int) (((0.8) * step)), (int) ((0.8) * step));
        g1.fillOval((int) (banhXe2.getX()), (int) banhXe2.getY(), (int) (((0.8) * step)), (int) ((0.8) * step));
        toaDoXe();
    }

    public void toaDoXe() {
        DecimalFormat format = new DecimalFormat("0.#");
        A.setText("(" + format.format(muiXe2.getX()) + " ; " + format.format((muiXe2.getY())) + ")");
        B.setText("(" + format.format(muiXe3.getX()) + " ; " + format.format((muiXe3.getY())) + ")");
        C.setText("(" + format.format((thanXe2.getX())) + " ; " + format.format((thanXe2.getY())) + ")");
        D.setText("(" + format.format((muiXe1.getX())) + " ; " + format.format((muiXe1.getY())) + ")");
        E.setText("(" + format.format((muiXe4.getX())) + " ; " + format.format((muiXe4.getY())) + ")");
        F.setText("(" + format.format((thanXe3.getX())) + " ; " + format.format((thanXe3.getY())) + ")");
        G.setText("(" + format.format((thanXe1.getX())) + " ; " + format.format((thanXe1.getY())) + ")");
        H.setText("(" + format.format((thanXe4.getX())) + " ; " + format.format((thanXe4.getY())) + ")");
        System.out.println(format.format((float) muiXe2.getX()) + "   " +  format.format((muiXe2.getY())));
    }

    // Vẽ Xe 
    public void veXe(String huongDi, int khoanCach) throws InterruptedException {
        if (huongDi.equals("Phải")) {
            for (float j = 0; j < (khoanCach / 0.1); j++) {
                double i = 0.1;    // khoản cách tịnh tuyến
                Thread.sleep(20);
                clear2D();
                translate(muiXe1, quaPhai(muiXe1, i));
                translate(muiXe2, quaPhai(muiXe2, i));
                translate(muiXe3, quaPhai(muiXe3, i));
                translate(muiXe4, quaPhai(muiXe4, i));
                translate(thanXe1, quaPhai(thanXe1, i));
                translate(thanXe3, quaPhai(thanXe3, i));
                translate(thanXe2, quaPhai(thanXe2, i));
                translate(thanXe4, quaPhai(thanXe4, i));
                translate(banhXe1, quaPhai(banhXe1, (i * step)));
                translate(banhXe2, quaPhai(banhXe2, (i * step)));
                veChiecXe();
            }
        } else if (huongDi.equals("Trái")) {
            for (float j = 0; j < (khoanCach / 0.1); j++) {
                double i = 0.1;    // khoản cách tịnh tuyến
                Thread.sleep(20);
                clear2D();
                translate(muiXe1, quaTrai(muiXe1, i));
                translate(muiXe2, quaTrai(muiXe2, i));
                translate(muiXe3, quaTrai(muiXe3, i));
                translate(muiXe4, quaTrai(muiXe4, i));
                translate(thanXe1, quaTrai(thanXe1, i));
                translate(thanXe3, quaTrai(thanXe3, i));
                translate(thanXe2, quaTrai(thanXe2, i));
                translate(thanXe4, quaTrai(thanXe4, i));
                translate(banhXe1, quaTrai(banhXe1, i * step));
                translate(banhXe2, quaTrai(banhXe2, i * step));
                veChiecXe();
            }
        } else if (huongDi.equals("Lên")) {
            for (float j = 0; j < (khoanCach / 0.1); j++) {
                double i = 0.1;    // khoản cách tịnh tuyến
                Thread.sleep(20);
                clear2D();
                translate(muiXe1, diLen(muiXe1, i));
                translate(muiXe2, diLen(muiXe2, i));
                translate(muiXe3, diLen(muiXe3, i));
                translate(muiXe4, diLen(muiXe4, i));
                translate(thanXe1, diLen(thanXe1, i));
                translate(thanXe3, diLen(thanXe3, i));
                translate(thanXe2, diLen(thanXe2, i));
                translate(thanXe4, diLen(thanXe4, i));
                translate(banhXe1, diLen(banhXe1, -(i * step)));
                translate(banhXe2, diLen(banhXe2, -(i * step)));
                veChiecXe();
            }
        } else if (huongDi.equals("Xuống")) {
            for (float j = 0; j < (khoanCach / 0.1); j++) {
                double i = 0.1;    // khoản cách tịnh tuyến
                Thread.sleep(20);
                clear2D();
                translate(muiXe1, diXuong(muiXe1, i));
                translate(muiXe2, diXuong(muiXe2, i));
                translate(muiXe3, diXuong(muiXe3, i));
                translate(muiXe4, diXuong(muiXe4, i));
                translate(thanXe1, diXuong(thanXe1, i));
                translate(thanXe3, diXuong(thanXe3, i));
                translate(thanXe2, diXuong(thanXe2, i));
                translate(thanXe4, diXuong(thanXe4, i));
                translate(banhXe1, diXuong(banhXe1, -(i * step)));
                translate(banhXe2, diXuong(banhXe2, -(i * step)));
                veChiecXe();
            }
        }
    }

    public void veDongHo(int i) {
        clear2D();
        bkDongHo = i;
        drawCircleMidPoint(Double.valueOf(XDongHo.getText()), Double.valueOf(YDongHo.getText()), bkDongHo);
    }
}
